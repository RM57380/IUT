#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#include "grammaire.h"


void grammaire_lire(char *nomfic, Grammaire *g)
{
  FILE *pfo ;
  pfo = fopen((nomfic), "r") ;
  
  if(!pfo)
    {
      printf("Ouverture du fichier %s impossible\n", nomfic);
      exit(2);
    }
  /* lecture nom de a fractale */
  fscanf(pfo, "%s\n",g->nom);
  /* lecture nombre de directions */
  fscanf(pfo,"%d\n",&(g->turtle_dir_max));
  /* lecture de la direction initiale */
  fscanf(pfo,"%d\n",&(g->turtle_dir_init));
  /* lecture de l'axiome */
  fscanf(pfo,"%s\n",g->axiome);
  /* aucune regles au depart */
  g->num_regles = 0;
  while (fscanf(pfo, "%c ->%s\n",
		&(g->car[g->num_regles]),
		g->regle[g->num_regles]) != (EOF))
    { 
      
      /* calcul de la longueur de la partie droite de la regle */
      g->long_regle[g->num_regles] = strlen(g->regle[g->num_regles]);
      g->num_regles++;
    }
  fclose(pfo);
}

void grammaire_afficher(Grammaire g)
{
  printf("Nom de la grammaire : %s\n", g.nom);
  printf("Nombre de directions : %d\n", g.turtle_dir_max);
  printf("Direction initiale : %d\n", g.turtle_dir_init);
  printf("Axiome : s\n", g.axiome);
  
  int i = 0;
  while (i < 1)
    {
      printf("%d\n", g.num_regles); 
      printf("RÃ¨gles de production %d : ", i+1);
      printf("%c->\n", g.car[i]);
      i++;
    }
}
